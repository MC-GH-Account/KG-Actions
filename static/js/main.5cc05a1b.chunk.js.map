{"version":3,"sources":["Wrapper.js","img/logo.svg","Knowledge.js","App.js","index.js"],"names":["Context","React","createContext","localeBrowser","navigator","language","split","langMessages","English","langCode","French","Wrapper","props","useState","locale","setLocale","messages","setMessages","Provider","value","selectLanguage","langParam","children","Knowledge","lang","setLang","context","useContext","navbarTranslations","title","id","home","search","about","contact","contentTranslations","paragraph","subtitle","callToAction","Container","className","Navbar","bg","variant","Brand","href","alt","src","logo","width","height","Toggle","Collapse","Nav","Link","Button","onClick","Row","Col","md","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cc05a1b.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {IntlProvider} from \"react-intl\";\r\nimport French from \"./lang/fr.json\";\r\nimport English from \"./lang/en.json\";\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst localeBrowser = navigator.language.split(/[-_]/)[0];  // language without region code\r\n\r\nlet langMessages = English; // Is this accurately setting based on browser information(?)\r\nlet langCode = \"en\"\r\nif (localeBrowser ===\"en\") {\r\n    langMessages = English;\r\n    langCode = \"en\";\r\n} else {\r\n    langMessages = French;\r\n    langCode = \"fr\";\r\n}\r\n\r\nconst Wrapper = (props) => {\r\n    const [locale, setLocale] = useState(langCode);\r\n    const [messages, setMessages] = useState(langMessages);\r\n    \r\n    function selectLanguage(langParam) {\r\n       setLocale(langParam);\r\n       if (langParam === \"en\") {\r\n           setMessages(English);\r\n       } else {\r\n           setMessages(French);\r\n       }\r\n    }\r\n    \r\n    return (\r\n        <Context.Provider value = {{locale, selectLanguage}}>\r\n            <IntlProvider messages={messages} locale={locale}>\r\n                {props.children}\r\n            </IntlProvider>\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default Wrapper;\r\n","export default __webpack_public_path__ + \"static/media/logo.c498c656.svg\";","import React, { useState, useContext } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Context} from \"./Wrapper\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport logo from \"./img/logo.svg\";\r\n\r\n/* Example JSON Object To Store i18n Text */\r\nconst i18n = {\r\n\r\n}\r\n\r\nconst Knowledge = () => {\r\n\r\n  const [lang, setLang] = useState(\"en\"); \r\n\r\n  const context = useContext(Context);\r\n\r\n  const navbarTranslations = {\r\n    title : <FormattedMessage id = \"app.navbar.title\" />,\r\n    home : <FormattedMessage id = \"app.navbar.home\" />,\r\n    search : <FormattedMessage id = \"app.navbar.search\" />,\r\n    about : <FormattedMessage id = \"app.navbar.about\" />,\r\n    contact : <FormattedMessage id = \"app.navbar.contact\" />,\r\n    language : <FormattedMessage id = \"app.navbar.language\" />,\r\n  }\r\n\r\n  const contentTranslations = {\r\n    paragraph : [\r\n      <FormattedMessage id = \"app.home.paraOne\" />,\r\n      <FormattedMessage id = \"app.home.paraTwo\" />,\r\n      <FormattedMessage id = \"app.home.paraThree\" />,\r\n      <FormattedMessage id = \"app.home.paraFour\" />,\r\n    ],\r\n    title : <FormattedMessage id = \"app.home.title\" />,\r\n    subtitle : <FormattedMessage id = \"app.home.subtitle\" />,\r\n    callToAction : <FormattedMessage id = \"app.home.callToAction\" />\r\n  }\r\n\r\n  const toggleLanguage = () => {\r\n    if(lang == \"en\"){\r\n      setLang(\"fr\");\r\n      context.selectLanguage(\"fr\");\r\n    }\r\n    else{\r\n      setLang(\"en\");\r\n      context.selectLanguage(\"en\");\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Container className=\"p-3\">\r\n    {/*Navigation bar*/}\r\n      <Navbar bg=\"primary\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              alt=\"Knowledge Graph\"\r\n              src={logo}\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />\r\n            {\" \" /*Spacing between logo and title*/ }\r\n            {navbarTranslations.title}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#home\">{navbarTranslations.home}</Nav.Link>\r\n              <Nav.Link href=\"#search\">{navbarTranslations.search}</Nav.Link>\r\n              <Nav.Link href=\"#about\">{navbarTranslations.about}</Nav.Link>\r\n              <Nav.Link href=\"#contact\">{navbarTranslations.contact}</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button variant=\"light\" onClick={() => {toggleLanguage()}}>{navbarTranslations.language}</Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      {/*Content*/}\r\n      <Container className=\"p-5 mb-4 bg-light rounded-3\">\r\n\r\n        {/*Header*/}\r\n        <Row className=\"\">\r\n          <Col>\r\n            <h1 className=\"header\">{contentTranslations.title}</h1>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/*Introduction*/}\r\n        <Row>\r\n          <p>{contentTranslations.paragraph[0]}</p>\r\n          <p>{contentTranslations.paragraph[1]}</p>\r\n        </Row>\r\n\r\n        {/*Sub Header*/}\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\"><h2 className=\"display-6 bg-primary rounded-3 p-2\">{contentTranslations.subtitle}</h2></Col>\r\n        </Row>\r\n\r\n        {/*Further Information*/}\r\n        <Row>\r\n          <p>{contentTranslations.paragraph[2]}</p>\r\n          <p>{contentTranslations.paragraph[3]}</p>\r\n        </Row>\r\n\r\n        {/*Call To User Action*/}\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\"><h2 className=\"display-4 bg-light border border-primary rounded-3 p-3\"><a href=\"#call_to_action\" className=\"no-underline\">{contentTranslations.callToAction}</a></h2></Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Knowledge;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Route, Routes, HashRouter} from 'react-router-dom';\r\nimport Knowledge from \"./Knowledge\"\r\n\r\nconst App = () => {\r\n\r\n  return(\r\n    <HashRouter>\r\n      <Routes >\r\n        <Route exact path=\"/\" element={<Knowledge />}>\r\n        </Route>\r\n      </Routes >\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {IntlProvider} from 'react-intl';\r\nimport Wrapper from \"./Wrapper\";\r\nimport \"./index.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n\t<Wrapper>\r\n\t\t<App />\r\n\t</Wrapper>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}